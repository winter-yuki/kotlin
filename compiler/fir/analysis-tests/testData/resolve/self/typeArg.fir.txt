FILE: typeArg.kt
    public final class In<in T> : R|kotlin/Any| {
        public constructor<in T>(): R|In<T>| {
            super<R|kotlin/Any|>()
        }

        public final fun accept(x: R|T|): R|kotlin/Nothing| {
            ^accept Null(null)!!
        }

    }
    public final class Out<out T> : R|kotlin/Any| {
        public constructor<out T>(): R|Out<T>| {
            super<R|kotlin/Any|>()
        }

        public final fun produce(): R|T| {
            ^produce Null(null)!!
        }

    }
    public final class Inv<T> : R|kotlin/Any| {
        public constructor<T>(): R|Inv<T>| {
            super<R|kotlin/Any|>()
        }

        public final fun id(x: R|T|): R|T| {
            ^id R|<local>/x|
        }

    }
    public abstract class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final fun f(): R|In<SelfType(A)>| {
            ^f R|/In.In|<R|A|>()
        }

        public final fun g(): R|Out<SelfType(A)>| {
            ^g R|/Out.Out|<R|SelfType(A)|>()
        }

        public final fun h(): R|Inv<SelfType(A)>| {
            ^h <CS errors: /Inv.Inv>#<R|SelfType(A)|>()
        }

    }
    public final class B : R|A| {
        public constructor(): R|B| {
            super<R|A|>()
        }

    }
