FILE: covariant.kt
    public abstract class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final fun a(b: R|B|): R|SelfType(A)| {
            ^a R|<local>/b|.<CS errors: /B.f>#()
        }

        public final fun b(b: R|B|): R|SelfType(A)?| {
            ^b R|<local>/b|.<CS errors: /B.g>#()
        }

        public final fun c(b: R|B|): R|SelfType(A)?| {
            ^c R|<local>/b|.<CS errors: /B.f>#()
        }

        public final fun d(b: R|B|): R|SelfType(A)| {
            ^d R|<local>/b|.<Inapplicable(INAPPLICABLE): kotlin/run>#<R|B|, R|SelfType(A)|>(<L> = run@fun R|B|.<anonymous>(): R|SelfType(A)| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ this@R|special/anonymous|.R|/B.f|()
            }
            )
        }

        public final fun e(b: R|B?|): R|SelfType(A)| {
            ^e R|<local>/b|.<Inapplicable(INAPPLICABLE): kotlin/run>#<R|B?|, R|SelfType(A)|>(<L> = run@fun R|B?|.<anonymous>(): R|SelfType(A)| <inline=Inline, kind=EXACTLY_ONCE>  {
                ^ this@R|special/anonymous|?.{ $subj$.R|/B.f|() }
            }
            )
        }

    }
    public final class B : R|A| {
        public constructor(): R|B| {
            super<R|A|>()
        }

        public final fun f(): R|SelfType(B)| {
            ^f Null(null)!!
        }

        public final fun g(): R|SelfType(B)?| {
            ^g Null(null)
        }

    }
